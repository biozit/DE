#!/bin/bash

# SPDX-FileCopyrightText: 2009 Fermi Research Alliance, LLC
# SPDX-License-Identifier: Apache-2.0

# Description:
#   This helper script creates a machine classad and
#     and sends it to the collector
#
# Expected environment:
#   CONDOR_CONFIG
#


condor_advertise="$1"
act_type="$2"
destination="$3"

slot_name=`grep '^STARTD_NAME = ' $CONDOR_CONFIG | tail -1| awk '{print $3}'`
host_name=`uname -n`
collector_name=`grep '^HEAD_NODE=' $CONDOR_CONFIG | tail -1| awk -F = '{print $2}'`

if [ "$destination" = "VO" ]; then
    startd_classad_fname=${CONDOR_CONFIG}.startd.classad
    classad_fname=${startd_classad_fname}
    rm -f ${startd_classad_fname}
else
    factory_collector_name=`grep '^GLIDEIN_Factory_Collector=' $CONDOR_CONFIG | tail -1| awk -F = '{print $2}'`

    if [ -z "${factory_collector_name}" ]; then
        echo "Could not find GLIDEIN_Factory_Collector! Failing Factory advertising." 1>&2
        exit 1
    fi

    factory_classad_fname=${CONDOR_CONFIG}.master.classad
    classad_fname=${factory_classad_fname}
    rm -f ${factory_classad_fname}
fi

now=`date +%s`

if [ "${act_type}" != "INVALIDATE" ]; then
  # Advertise a classad

  if [ "$destination" = "VO" ]; then
    # Create the standard part
    cat >  ${startd_classad_fname} << EOF
MyType = "Machine"
TargetType = "Job"
State = "Drained"
Activity = "${act_type}"
EnteredCurrentState = $now
EnteredCurrentActivity = $now
START = False
Requirements = ( START ) && ( IsValidCheckpointPlatform )
IsValidCheckpointPlatform = False
Rank = 0
CurrentRank = 0.0
CpuIsBusy = false
CpuBusy = false
LastBenchmark = 0
FileSystemDomain = "${host_name}"
UidDomain = "${host_name}"
SlotID = 1
TotalSlots = 1
Cpus = 1
TotalSlotCpus = 1
DetectedCpus = 1
TotalCpus = 1
DetectedMemory = 1
TotalVirtualMemory = 1
VirtualMemory = 1
TotalSlotMemory = 1
TotalMemory = 1
Memory = 1
TotalSlotDisk = 1
TotalDisk = 1
Disk = 1
LoadAvg = 0.0
CondorLoadAvg =0.9
TotalLoadAvg = 0.0
TotalCondorLoadAvg = 0/0
Arch = "`uname -m`"
OpSys = "LINUX"
OpSysLegacy = "LINUX"
HasFileTransfer = true
EOF
  else
    cat >  ${factory_classad_fname} << EOF
MyType = "DaemonMaster"
TargetType = ""
DetectedCpus = 1
DetectedMemory = 1
EOF
  fi

  cat >>  ${classad_fname} << EOF
Name = "${slot_name}@${host_name}"
Machine = "${host_name}"
MyAddress = "<127.0.0.1:1>"
MyCurrentTime = $now
DaemonStartTime = $now
IS_GLIDEIN = True
GLIDEIN_ToRetire = $now
CondorPlatform = "\$glideinWMS: glidein_startup.sh \$"
GLIDEIN_COLLECTOR_NAME = "${collector_name}"
EOF

  # append the glidein-specific variables
  glidein_vars=`grep '^GLIDEIN_VARIABLES = ' $CONDOR_CONFIG | tail -1| awk '{split($3,a,","); for (i in a) {print a[i]} }'`

  for v in ${glidein_vars};
  do
    grep "^$v=" $CONDOR_CONFIG | tail -1 >> ${classad_fname}
  done


  if [ "$destination" = "VO" ]; then
      ${condor_advertise} -tcp UPDATE_STARTD_AD ${startd_classad_fname}
      rc=$?
  else
      # condor_advertise -pool does not seem to work, so use the environment instead
      export _CONDOR_COLLECTOR_HOST=${factory_collector_name}
      ${condor_advertise} -tcp UPDATE_MASTER_AD ${factory_classad_fname}
      rc=$?
      # no need to clean up, since we will terminate soon after
  fi

else # if [ "${act_type}" == "INVALIDATE" ]
  if [ "$destination" = "VO" ]; then
    # Deadvertise
    # Brian suggested to send the name instead of the query - more efficient
    #MyType = "Query"
    #TargetType = "Machine"
    #Requirements =  Name == "${slot_name}@${host_name}"
    cat >  ${startd_classad_fname} << EOF
Name = "${slot_name}@${host_name}"
EOF

    ${condor_advertise} -tcp INVALIDATE_STARTD_ADS ${startd_classad_fname}
    rc=$?
  else
    # Brian suggested to send the name instead of the query - more efficient
    #MyType = "Query"
    #TargetType = "DaemonMaster"
    #Requirements =  Name == "${slot_name}@${host_name}"
    cat >  ${factory_classad_fname} << EOF
Name = "${slot_name}@${host_name}"
EOF

    # condor_advertise -pool does not seem to work, so use the environment instead
    export _CONDOR_COLLECTOR_HOST=${factory_collector_name}
    ${condor_advertise} -tcp INVALIDATE_MASTER_ADS ${factory_classad_fname}
    rc=$?
    # no need to clean up, since we will terminate soon after
  fi

fi # if [ "${act_type}" != "INVALIDATE" ]

exit $rc
